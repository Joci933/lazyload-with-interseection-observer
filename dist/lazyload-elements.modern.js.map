{"version":3,"file":"lazyload-elements.modern.js","sources":["../src/index.js"],"sourcesContent":["import IntersectionObserver from \"intersection-observer-polyfill\";\n\nmodule.exports = function lazyLoadElements(target, targetClassName, attribute) {\n  const lazyLoadClass = targetClassName;\n  const lazyImages = document.querySelectorAll(`${target}.${targetClassName}`);\n\n  const options = {\n    rootMargin: \"0px\",\n    threshold: 1,\n  };\n\n  const imageObserver = new IntersectionObserver((entries, options) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting) {\n        const { target } = entry;\n        target[attribute] = target.dataset.src;\n        target.classList.remove(lazyLoadClass);\n        options.unobserve(target);\n      }\n    });\n  });\n\n  lazyImages.forEach((image) => {\n    imageObserver.observe(image, options);\n  });\n};\n"],"names":["module","exports","target","targetClassName","attribute","lazyLoadClass","lazyImages","document","querySelectorAll","options","rootMargin","threshold","imageObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","dataset","src","classList","remove","unobserve","image","observe"],"mappings":"8CAEAA,OAAOC,QAAU,SAA0BC,EAAQC,EAAiBC,GAClE,MAAMC,EAAgBF,EAChBG,EAAaC,SAASC,iBAAkB,GAAEN,KAAUC,KAEpDM,EAAU,CACdC,WAAY,MACZC,UAAW,GAGPC,EAAgB,IAAIC,EAAqB,CAACC,EAASL,KACvDK,EAAQC,QAASC,IACf,GAAIA,EAAMC,eAAgB,CACxB,MAAMf,OAAEA,GAAWc,EACnBd,EAAOE,GAAaF,EAAOgB,QAAQC,IACnCjB,EAAOkB,UAAUC,OAAOhB,GACxBI,EAAQa,UAAUpB,QAKxBI,EAAWS,QAASQ,IAClBX,EAAcY,QAAQD,EAAOd"}