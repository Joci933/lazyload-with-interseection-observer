{"version":3,"file":"lazyload-elements.umd.js","sources":["../src/index.js"],"sourcesContent":["import IntersectionObserver from \"intersection-observer-polyfill\";\n\nwindow.addEventListener(\"load\", function() {\n  function setLazyLoad(target, targetClassName, attribute) {\n    const lazyLoadClass = targetClassName;\n    const lazyImages = document.querySelectorAll(\n      `${target}.${targetClassName}`\n    );\n\n    const options = {\n      rootMargin: \"0px\",\n      threshold: 1,\n    };\n\n    const imageObserver = new IntersectionObserver((entries, options) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          const { target } = entry;\n          target[attribute] = target.dataset.src;\n          target.classList.remove(lazyLoadClass);\n          options.unobserve(target);\n        }\n      });\n    });\n\n    lazyImages.forEach((image) => {\n      imageObserver.observe(image, options);\n    });\n  }\n  setLazyLoad(\"iframe\", \"lazy-iframe\", \"src\");\n  setLazyLoad(\"a\", \"lazy-href\", \"href\");\n});\n"],"names":["window","addEventListener","setLazyLoad","target","targetClassName","attribute","lazyLoadClass","lazyImages","document","querySelectorAll","options","rootMargin","threshold","imageObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","dataset","src","classList","remove","unobserve","image","observe"],"mappings":"+XAEAA,OAAOC,iBAAiB,OAAQ,WAC9B,SAASC,EAAYC,EAAQC,EAAiBC,GAC5C,IAAMC,EAAgBF,EAChBG,EAAaC,SAASC,iBACvBN,MAAUC,GAGTM,EAAU,CACdC,WAAY,MACZC,UAAW,GAGPC,EAAgB,IAAIC,UAAqB,SAACC,EAASL,GACvDK,EAAQC,QAAQ,SAACC,GACf,GAAIA,EAAMC,eAAgB,CACxB,IAAQf,EAAWc,EAAXd,OACRA,EAAOE,GAAaF,EAAOgB,QAAQC,IACnCjB,EAAOkB,UAAUC,OAAOhB,GACxBI,EAAQa,UAAUpB,QAKxBI,EAAWS,QAAQ,SAACQ,GAClBX,EAAcY,QAAQD,EAAOd,KAGjCR,EAAY,SAAU,cAAe,OACrCA,EAAY,IAAK,YAAa"}